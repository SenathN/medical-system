/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package jframes;

import java.awt.Color;
import java.util.Calendar;
import javax.swing.DefaultComboBoxModel;
import java.io.File;
import java.util.Date;
import mysqldb.DBUtil;
import network.ServerNetworkComponent;

/**
 *
 * @author Sen
 */
public class MainInterface extends javax.swing.JFrame {

    /**
     * Creates new form interface_main
     */
    public MainInterface() {
        initComponents();

        // Setting the window to half left        
//        setBounds(WIDTH, WIDTH, WIDTH, HEIGHT);
        // initiating the interface values and mechanism
        initiateDynamicOptions();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSeparator1 = new javax.swing.JSeparator();
        prescriptionPatientPanel = new javax.swing.JPanel();
        newPateintsPanel = new javax.swing.JPanel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jComboBox2 = new javax.swing.JComboBox<>();
        jComboBox3 = new javax.swing.JComboBox<>();
        p_name = new javax.swing.JTextField();
        p_type = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        btnAddPatient = new javax.swing.JButton();
        clearCanvas = new javax.swing.JButton();
        p_number = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        viewPatientsPanel = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        networkPanel = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        hostPortField = new javax.swing.JLabel();
        DBConnectionOutputField = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        prescriptionPatientPanel.setLayout(new java.awt.BorderLayout());

        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });

        p_name.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                p_nameActionPerformed(evt);
            }
        });

        p_type.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "New patient", "Follow up patient" }));

        jLabel2.setText("Name");

        jLabel3.setText("Date of birth");
        jLabel3.setToolTipText("");

        jLabel4.setText("Patient type");

        btnAddPatient.setText("Add patient");
        btnAddPatient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddPatientActionPerformed(evt);
            }
        });

        clearCanvas.setText("Clear");
        clearCanvas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearCanvasActionPerformed(evt);
            }
        });

        p_number.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                p_numberActionPerformed(evt);
            }
        });

        jLabel1.setText("Number");

        jLabel6.setText("New Patient");

        javax.swing.GroupLayout newPateintsPanelLayout = new javax.swing.GroupLayout(newPateintsPanel);
        newPateintsPanel.setLayout(newPateintsPanelLayout);
        newPateintsPanelLayout.setHorizontalGroup(
            newPateintsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(newPateintsPanelLayout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jLabel6)
                .addContainerGap(315, Short.MAX_VALUE))
            .addGroup(newPateintsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(newPateintsPanelLayout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(newPateintsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, newPateintsPanelLayout.createSequentialGroup()
                            .addGroup(newPateintsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(newPateintsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(p_type, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, newPateintsPanelLayout.createSequentialGroup()
                                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(p_name, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(p_number, javax.swing.GroupLayout.Alignment.LEADING)))
                        .addGroup(newPateintsPanelLayout.createSequentialGroup()
                            .addGap(274, 274, 274)
                            .addGroup(newPateintsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(clearCanvas, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(btnAddPatient, javax.swing.GroupLayout.Alignment.TRAILING))))
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        newPateintsPanelLayout.setVerticalGroup(
            newPateintsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(newPateintsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6)
                .addContainerGap(284, Short.MAX_VALUE))
            .addGroup(newPateintsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(newPateintsPanelLayout.createSequentialGroup()
                    .addGap(34, 34, 34)
                    .addGroup(newPateintsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(p_number, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel1))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addGroup(newPateintsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(p_name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel2))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addGroup(newPateintsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel3)
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addGroup(newPateintsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(p_type, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel4))
                    .addGap(18, 18, 18)
                    .addComponent(btnAddPatient)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(clearCanvas)
                    .addContainerGap(54, Short.MAX_VALUE)))
        );

        jButton1.setText("All Patients");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel5.setText("VIew all patients");

        javax.swing.GroupLayout viewPatientsPanelLayout = new javax.swing.GroupLayout(viewPatientsPanel);
        viewPatientsPanel.setLayout(viewPatientsPanelLayout);
        viewPatientsPanelLayout.setHorizontalGroup(
            viewPatientsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, viewPatientsPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        viewPatientsPanelLayout.setVerticalGroup(
            viewPatientsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(viewPatientsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(viewPatientsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jLabel5))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel7.setForeground(new java.awt.Color(128, 128, 128));
        jLabel7.setText("Server : ");

        hostPortField.setForeground(new java.awt.Color(128, 128, 128));
        hostPortField.setText("Loading...");

        DBConnectionOutputField.setForeground(new java.awt.Color(153, 153, 153));
        DBConnectionOutputField.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        DBConnectionOutputField.setText("Databse connection : Loading");

        javax.swing.GroupLayout networkPanelLayout = new javax.swing.GroupLayout(networkPanel);
        networkPanel.setLayout(networkPanelLayout);
        networkPanelLayout.setHorizontalGroup(
            networkPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(networkPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(hostPortField, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(DBConnectionOutputField, javax.swing.GroupLayout.PREFERRED_SIZE, 277, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        networkPanelLayout.setVerticalGroup(
            networkPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, networkPanelLayout.createSequentialGroup()
                .addContainerGap(24, Short.MAX_VALUE)
                .addGroup(networkPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(hostPortField)
                    .addComponent(DBConnectionOutputField))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(viewPatientsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(newPateintsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)
                        .addComponent(prescriptionPatientPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 412, Short.MAX_VALUE))
                    .addComponent(networkPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(viewPatientsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(prescriptionPatientPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(newPateintsPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(networkPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private static MainInterface ref;
    
    private int[] dayCount = {31, 28, 31, 30, 31, 30, 31, 31, 31, 30, 31, 30,};
    private static int ticketNumber;
    DrawArea drawArea;

    private void initiateDynamicOptions() {
        
        //setting a static reference to the application.
        ref = this;

        // Setting ticket number constant for the session
        ticketNumber = DBUtil.getNextPatientNumber();
        System.out.println("next ticket number : " + ticketNumber);

        if (ticketNumber < 1) {
            ticketNumber = 1;  // random number generator to use of required -> (int) (Math.random() * 100 + 40);
        }
        p_number.setText(String.valueOf(ticketNumber));
        p_number.setEditable(false);

        //Setting the date chooser combo boxes
        DefaultComboBoxModel<Integer> yearBox = (DefaultComboBoxModel<Integer>) jComboBox1.getModel();
        DefaultComboBoxModel<Integer> monthBox = (DefaultComboBoxModel<Integer>) jComboBox2.getModel();

        // Setting last 80 years to be picked from
        Calendar cld = Calendar.getInstance();
        int currentYear = cld.get(Calendar.YEAR);

        yearBox.removeAllElements();
        for (int i = currentYear; i > currentYear - 80; i--) {
            yearBox.addElement(i);
        }

        //initiating month selection combobox
        for (int month = 1; month < 13; month++) {
            monthBox.addElement(month);
        }

        //initiating days selection combobox
        updateDays(1);

        // initiating the drawing canvas
        drawArea = new DrawArea();
        prescriptionPatientPanel.add(drawArea);

        // network status refresher interval - 2sec
        networkStatusUpdater(2000);
    }

    @SuppressWarnings("unchecked")
    private void updateDays(int month) {
        DefaultComboBoxModel dayBox = (DefaultComboBoxModel) jComboBox3.getModel();
        dayBox.removeAllElements();
        for (int i = 1; i <= dayCount[month - 1]; i++) {
            dayBox.addElement(i);
        }
    }

    private void btnAddPatientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddPatientActionPerformed
        int inputNumber;
        try {
            inputNumber = Integer.parseInt(p_number.getText());
        } catch (NumberFormatException e) {
            inputNumber = 0;
        }
        String inputName = p_name.getText();
        String inputDate
                = jComboBox1.getSelectedItem().toString() + "/"
                + jComboBox2.getSelectedItem().toString() + "/"
                + jComboBox3.getSelectedItem().toString();
        String inputType = p_type.getSelectedItem().toString();

        System.out.println(
                (inputNumber > 0 ? inputNumber : 0) + " - "
                + inputName + " - "
                + inputDate + " - "
                + inputType);

        String state = DBUtil.createPatientEntry(inputNumber, inputName, inputType, inputDate);
        System.out.println(state);

        // saving prescription image
        saveCanvasAsImage(inputNumber);

        // cleaning up interface for next patient
        postAddPatientCleanUp();
    }//GEN-LAST:event_btnAddPatientActionPerformed

    private void saveCanvasAsImage(int id) {
        try {
//            String currentDir = System.getProperty("user.dir");
            String filePrefix;

            try {
                filePrefix = String.valueOf(Integer.valueOf(id));
            } catch (Exception e) {
                filePrefix = new Date().toString();
            }

            String fileName = filePrefix + "_prescription.png";
            String filePath = "prescriptions" + File.separator
                    + fileName;

            drawArea.save(filePath);

        } catch (Exception e) {
            System.out.println(e);
        }
    }

    private void p_numberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_p_numberActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_p_numberActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        PatientsListViewer.main(new String[]{});
    }//GEN-LAST:event_jButton1ActionPerformed

    private void p_nameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_p_nameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_p_nameActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        DefaultComboBoxModel<Integer> yearBox = (DefaultComboBoxModel<Integer>) jComboBox1.getModel();
        int year = 2000;
        try {
            year = Integer.parseInt(yearBox.getSelectedItem().toString());
        } catch (Exception e) {
            Calendar cl = Calendar.getInstance();
            year = cl.get(Calendar.YEAR);
        }
        dayCount[1] = year % 4 == 0 ? 29 : 28;
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed
        DefaultComboBoxModel<Integer> monthBox = (DefaultComboBoxModel<Integer>) jComboBox2.getModel();
        updateDays(Integer.parseInt(monthBox.getSelectedItem().toString()));
    }//GEN-LAST:event_jComboBox2ActionPerformed

    private void clearCanvasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearCanvasActionPerformed
        drawArea.clear();
    }//GEN-LAST:event_clearCanvasActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainInterface().setVisible(true);

            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel DBConnectionOutputField;
    private javax.swing.JButton btnAddPatient;
    private javax.swing.JButton clearCanvas;
    private javax.swing.JLabel hostPortField;
    private javax.swing.JButton jButton1;
    private javax.swing.JComboBox<Integer> jComboBox1;
    private javax.swing.JComboBox<Integer> jComboBox2;
    private javax.swing.JComboBox<Integer> jComboBox3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JPanel networkPanel;
    private javax.swing.JPanel newPateintsPanel;
    private javax.swing.JTextField p_name;
    private javax.swing.JTextField p_number;
    private javax.swing.JComboBox<String> p_type;
    private javax.swing.JPanel prescriptionPatientPanel;
    private javax.swing.JPanel viewPatientsPanel;
    // End of variables declaration//GEN-END:variables

    private void postAddPatientCleanUp() {
        ticketNumber++;
        p_number.setText(String.valueOf(ticketNumber));
        p_name.setText("");
        drawArea.clear();
    }

    private void networkStatusUpdater(int intervalInMilliseconds) {
        boolean isEnabled = ServerNetworkComponent.enableNetwoking(true);
        if (isEnabled) {
            hostPortField.setText(ServerNetworkComponent.host + ":" + ServerNetworkComponent.port);
        }
    }

    public static MainInterface getJFrame() {
        
        return ref;
    }
    
    public void SQLDatabaseConnection(boolean state) {
        String output = "Database Connection : ";
        DBConnectionOutputField.setForeground(Color.GRAY);
        if (state) {
            output += "Success";
        } else {
            output += "Failed";
            DBConnectionOutputField.setForeground(Color.red);
        }
        DBConnectionOutputField.setText(output);
    }
}
